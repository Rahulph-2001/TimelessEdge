<%- include("../../views/partials/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
    /* Reset and Base Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
      background-color: #f5f7fa;
      color: #1e293b;
      line-height: 1.6;
    }

    /* Main Layout */
    .content-main {
      padding: 2rem;
      max-width: 1400px;
      margin: 0 auto;
    }

    .content-header {
      margin-bottom: 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: relative;
    }

    .content-title {
      font-size: 1.875rem;
      font-weight: 700;
      color: #0f172a;
      margin: 0;
      position: relative;
      padding-bottom: 0.5rem;
    }

    .content-title::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 60px;
      height: 3px;
      background-color: #3b82f6;
      border-radius: 3px;
    }

    /* Card Styles */
    .card {
      background: white;
      border-radius: 16px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
      margin-bottom: 2rem;
      overflow: hidden;
      transition: transform 0.2s, box-shadow 0.2s;
    }

    .card:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 24px rgba(0, 0, 0, 0.08);
    }

    .card-header {
      padding: 1.5rem 2rem;
      border-bottom: 1px solid #e2e8f0;
      background-color: #f8fafc;
    }

    .card-body {
      padding: 2rem;
    }

    /* Search Bar */
    .search-container {
      max-width: 500px;
      margin: 0 auto;
      position: relative;
    }

    .search-input {
      width: 100%;
      padding: 0.875rem 1.25rem 0.875rem 3rem;
      border: 1px solid #e2e8f0;
      border-radius: 50px;
      font-size: 0.95rem;
      transition: all 0.3s;
      background-color: white;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.03);
    }

    .search-input:focus {
      outline: none;
      border-color: #3b82f6;
      box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.15);
    }

    .search-icon {
      position: absolute;
      left: 1.25rem;
      top: 50%;
      transform: translateY(-50%);
      color: #64748b;
    }

    /* Grid Layout */
    .row {
      display: flex;
      gap: 2.5rem;
      margin: 0 0.5rem;
    }

    .col-md-3 {
      flex: 0 0 30%;
      max-width: 30%;
    }

    .col-md-9 {
      flex: 0 0 70%;
      max-width: 70%;
    }

    /* Form Elements */
    .form-group {
      margin-bottom: 1.75rem;
    }

    .form-label {
      display: block;
      font-weight: 600;
      margin-bottom: 0.625rem;
      color: #334155;
      font-size: 0.95rem;
    }

    .form-control {
      width: 100%;
      padding: 0.875rem 1.25rem;
      border: 1px solid #e2e8f0;
      border-radius: 10px;
      font-size: 0.95rem;
      transition: all 0.3s;
      background-color: #f8fafc;
    }

    .form-control:focus {
      outline: none;
      border-color: #3b82f6;
      box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.15);
      background-color: white;
    }

    textarea.form-control {
      min-height: 140px;
      resize: vertical;
    }

    /* Buttons */
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      font-weight: 600;
      font-size: 0.95rem;
      border-radius: 10px;
      transition: all 0.3s;
      cursor: pointer;
      text-decoration: none;
      border: none;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
    }

    .btn-primary {
      background-color: #3b82f6;
      color: white;
      width: 100%;
    }

    .btn-primary:hover {
      background-color: #2563eb;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.25);
    }

    .btn-info {
      background-color: #0ea5e9;
      color: white;
    }

    .btn-info:hover {
      background-color: #0284c7;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(14, 165, 233, 0.25);
    }

    .btn-success {
      background-color: #10b981;
      color: white;
    }

    .btn-success:hover {
      background-color: #059669;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(16, 185, 129, 0.25);
    }

    .btn-danger {
      background-color: #ef4444;
      color: white;
    }

    .btn-danger:hover {
      background-color: #dc2626;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(239, 68, 68, 0.25);
    }

    .btn-warning {
      background-color: #f59e0b;
      color: white;
    }

    .btn-warning:hover {
      background-color: #d97706;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(245, 158, 11, 0.25);
    }

    /* Table Styles */
    .table-responsive {
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      border-radius: 12px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
      background-color: white;
    }

    .table th,
    .table td {
      padding: 1rem;
      text-align: center;
      vertical-align: middle;
    }

    .table th {
      font-weight: 600;
      background-color: #f1f5f9;
      color: #334155;
      text-transform: uppercase;
      font-size: 0.85rem;
      letter-spacing: 0.05em;
      border-bottom: 2px solid #e2e8f0;
    }

    .table td {
      border-bottom: 1px solid #e2e8f0;
      /* Fix for content display */
      max-width: 250px;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: normal;
    }

    .table tbody tr {
      transition: background-color 0.2s;
    }

    .table tbody tr:hover {
      background-color: #f8fafc;
    }

    .table tbody tr:last-child td {
      border-bottom: none;
    }

    /* Status Badges */
    .badge {
      display: inline-flex;
      align-items: center;
      padding: 0.5rem 1rem;
      font-size: 0.85rem;
      font-weight: 600;
      border-radius: 50px;
      letter-spacing: 0.02em;
    }

    .badge-success {
      background-color: #dcfce7;
      color: #166534;
    }

    .badge-danger {
      background-color: #fee2e2;
      color: #991b1b;
    }

    .badge-warning {
      background-color: #fef3c7;
      color: #92400e;
    }

    /* Action Buttons Container */
    .action-buttons {
      display: flex;
      gap: 0.5rem;
      justify-content: center;
      align-items: center;
      flex-wrap: wrap; /* Allow buttons to wrap if needed */
    }

    .action-buttons .btn {
      padding: 0.5rem 0.75rem;
      font-size: 0.85rem;
      min-width: 80px; /* Ensure minimum width for buttons */
      margin: 0.25rem 0; /* Add some vertical spacing */
    }

    /* Fix for edit button */
    .action-buttons .btn-info {
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }

    /* Error Messages */
    .error-message {
      color: #ef4444;
      font-size: 0.85rem;
      margin-top: 0.5rem;
      display: none;
      font-weight: 500;
    }

    /* Pagination */
    .pagination {
      display: flex;
      justify-content: center;
      gap: 0.5rem;
      margin-top: 2.5rem;
    }

    .pagination-link {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      min-width: 2.5rem;
      height: 2.5rem;
      padding: 0 0.75rem;
      border-radius: 8px;
      font-size: 0.95rem;
      font-weight: 500;
      color: #334155;
      background-color: white;
      border: 1px solid #e2e8f0;
      text-decoration: none;
      transition: all 0.3s;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    }

    .pagination-link:hover {
      background-color: #f8fafc;
      border-color: #cbd5e1;
      transform: translateY(-2px);
      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.08);
    }

    .pagination-link.active {
      background-color: #3b82f6;
      color: white;
      border-color: #3b82f6;
      box-shadow: 0 3px 10px rgba(59, 130, 246, 0.25);
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(4px);
      animation: fadeIn 0.3s ease-out;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .modal-content {
      background-color: #ffffff;
      margin: 10% auto;
      padding: 2rem;
      border-radius: 16px;
      width: 450px;
      max-width: 90%;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      transform: translateY(20px);
      animation: slideUp 0.3s ease-out forwards;
    }

    @keyframes slideUp {
      to { transform: translateY(0); }
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid #e2e8f0;
    }

    .modal-title {
      font-size: 1.25rem;
      font-weight: 700;
      margin: 0;
      color: #0f172a;
    }

    .close {
      color: #64748b;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
      transition: color 0.2s;
      line-height: 1;
    }

    .close:hover,
    .close:focus {
      color: #0f172a;
    }

    /* Offer Styles */
    .offer-badge {
      background-color: #fef3c7;
      color: #92400e;
      padding: 0.5rem 1rem;
      border-radius: 50px;
      font-weight: 600;
      font-size: 0.85rem;
      display: inline-flex;
      align-items: center;
    }

    .offer-badge::before {
      content: '';
      display: inline-block;
      width: 8px;
      height: 8px;
      background-color: #f59e0b;
      border-radius: 50%;
      margin-right: 8px;
    }

    /* Form Add Category Card */
    .form-card {
      background-color: white;
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
      height: 100%;
    }

    .form-card-title {
      font-size: 1.25rem;
      font-weight: 700;
      margin-bottom: 1.5rem;
      color: #0f172a;
      padding-bottom: 0.75rem;
      border-bottom: 2px solid #e2e8f0;
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
      .row {
        flex-direction: column;
      }

      .col-md-3,
      .col-md-9 {
        flex: 0 0 100%;
        max-width: 100%;
      }
      
      .form-card {
        margin-bottom: 2rem;
      }
    }

    @media (max-width: 768px) {
      .content-main {
        padding: 1.5rem 1rem;
      }
      
      .card-body {
        padding: 1.5rem;
      }
      
      /* Fix table display on smaller screens */
      .table td {
        max-width: 150px;
      }
    }

    @media (max-width: 640px) {
      .table th,
      .table td {
        padding: 0.75rem 0.5rem;
        font-size: 0.9rem;
      }

      .action-buttons {
        flex-direction: column;
        gap: 0.5rem;
      }
      
      .action-buttons .btn {
        width: 100%;
        margin: 0.125rem 0;
      }
      
      .content-title {
        font-size: 1.5rem;
      }
      
      .pagination-link {
        min-width: 2rem;
        height: 2rem;
        font-size: 0.85rem;
      }
      
      /* Ensure table content is visible on mobile */
      .table td {
        max-width: 100px;
        white-space: normal;
        word-break: break-word;
      }
    }
  </style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title">Category Management</h2>
    </div>

    <div class="card">
      <div class="card-header">
        <div class="search-container">
          <form action="/admin/category/" method="post">
            <svg class="search-icon" width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            <input type="text" class="search-input" placeholder="Search categories..." name="search"/>
          </form>
        </div>
      </div>

      <div class="card-body">
        <div class="row">
          <!-- Add Category Form -->
          <div class="col-md-3">
            <div class="form-card">
              <h3 class="form-card-title">Add New Category</h3>
              <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                <div class="form-group">
                  <label class="form-label">Category Name</label>
                  <input type="text" name="name" class="form-control" placeholder="Enter category name" required/>
                  <div id="name-error" class="error-message"></div>
                </div>

                <div class="form-group">
                  <label class="form-label">Description</label>
                  <textarea name="description" class="form-control" placeholder="Enter category description" id="descriptionId" required></textarea>
                  <div id="description-error" class="error-message"></div>
                </div>

                <button type="submit" class="btn btn-primary">
                  Create Category
                </button>
              </form>
            </div>
          </div>

          <!-- Categories Table -->
          <div class="col-md-9">
            <div class="table-responsive">
              <table class="table">
                <thead>
                  <tr>
                    <th>No.</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category, index) => { %>
                  <tr>
                    <td><%= index + 1 %></td>
                    <td><b><%= category.name %></b></td>
                    <td><%= category.description %></td>
                    <td>
                      <% if(category.categoryOffer) { %>
                        <span class="offer-badge"><%= category.categoryOffer %>%</span>
                      <% } else { %>
                        <span>0%</span>
                      <% } %>
                    </td>
                    <td>
                      <% if(category.isListed) { %>
                        <span class="badge badge-success">Listed</span>
                      <% } else { %>
                        <span class="badge badge-danger">Unlisted</span>
                      <% } %>
                    </td>
                    <td>
                      <div class="action-buttons">
                        <% if(category.categoryOffer > 0) { %>
                          <button class="btn btn-danger" onclick="removeOffer('<%= category._id %>')">Remove</button>
                        <% } else { %>
                          <button class="btn btn-warning" onclick="showAddOfferModal('<%= category._id %>', '<%= category.name %>')">Add Offer</button>
                        <% } %>
                        <% if(category.isListed) { %>
                          <a href="/admin/listCategory?id=<%= category._id %>" class="btn btn-danger">Unlist</a>
                        <% } else { %>
                          <a href="/admin/unlistCategory?id=<%= category._id %>" class="btn btn-success">List</a>
                        <% } %>
                        <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info">Edit</a>
                      </div>
                    </td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          
            <!-- Pagination -->
            <div class="pagination">
              <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>" class="pagination-link">&laquo;</a>
              <% } %>
              
              <% for (let i = 1; i <= totalPages; i++) { %>
                <% if (i === currentPage) { %>
                  <span class="pagination-link active"><%= i %></span>
                <% } else { %>
                  <a href="?page=<%= i %>" class="pagination-link"><%= i %></a>
                <% } %>
              <% } %>
              
              <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>" class="pagination-link">&raquo;</a>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Add Offer Modal -->
  <div id="addOfferModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">Add Offer to <span id="categoryName"></span></h3>
        <span class="close" onclick="closeModal()">&times;</span>
      </div>
      <form id="addOfferForm" onsubmit="return handleAddOfferSubmit(event)">
        <div class="form-group">
          <label class="form-label">Offer Percentage (%)</label>
          <input type="number" name="offerPercentage" id="offerPercentage" class="form-control" min="1" max="90" required placeholder="Enter offer percentage"/>
          <div id="offer-error" class="error-message"></div>
        </div>
        <input type="hidden" name="categoryId" id="categoryId" value="">
        <button type="submit" class="btn btn-primary">Add Offer</button>
      </form>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script>
    function handleFormSubmit(event) {
      event.preventDefault();
      if (!validateForm()) {
        return;
      }

      const name = document.getElementsByName("name")[0].value;
      const description = document.getElementById("descriptionId").value;

      fetch("/admin/addCategory", {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ name, description })
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => {
            throw new Error(err.error);
          });
        }
        return response.json();
      })
      .then(data => {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Category added successfully'
        }).then(() => {
          location.reload();
        });
      })
      .catch(error => {
        if (error.message === "category already exists") {
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Category already exists'
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'An error occurred while adding the category'
          });
        }
      });
    }

    // Validate form function
    function validateForm() {
      clearErrorMessages();
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();
      let isValid = true;

      // Name validation
      if (!name) {
        displayErrorMessage("name-error", "Please enter a category name");
        isValid = false;
      } else if (name.length < 2) {
        displayErrorMessage("name-error", "Category name must be at least 2 characters");
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should contain only letters and spaces");
        isValid = false;
      }

      // Description validation
      if (!description) {
        displayErrorMessage("description-error", "Please enter a category description");
        isValid = false;
      } else if (description.length < 10) {
        displayErrorMessage("description-error", "Description should be at least 10 characters");
        isValid = false;
      }

      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.textContent = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName("error-message");
      Array.from(errorElements).forEach((element) => {
        element.textContent = "";
        element.style.display = "none";
      });
    }

    // Real-time search functionality
    document.querySelector('.search-input').addEventListener('input', function(e) {
      const searchTerm = e.target.value.toLowerCase();
      const tableRows = document.querySelectorAll('tbody tr');
      
      tableRows.forEach(row => {
        const name = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
        const description = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
        
        if (name.includes(searchTerm) || description.includes(searchTerm)) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    });

    // Modal functions
    function showAddOfferModal(categoryId, categoryName) {
      document.getElementById('categoryId').value = categoryId;
      document.getElementById('categoryName').textContent = categoryName;
      document.getElementById('addOfferModal').style.display = 'block';
    }

    function closeModal() {
      document.getElementById('addOfferModal').style.display = 'none';
      document.getElementById('addOfferForm').reset();
      clearErrorMessages();
    }

    // Close modal when clicking outside of it
    window.onclick = function(event) {
      const modal = document.getElementById('addOfferModal');
      if (event.target == modal) {
        closeModal();
      }
    }

    // Handle add offer form submission
    function handleAddOfferSubmit(event) {
      event.preventDefault();
      
      const categoryId = document.getElementById('categoryId').value;
      const offerPercentage = document.getElementById('offerPercentage').value;
      
      // Validate offer percentage
      if (!offerPercentage || offerPercentage < 1 || offerPercentage > 90) {
        displayErrorMessage("offer-error", "Please enter a valid offer percentage between 1 and 90");
        return false;
      }
      
      fetch("/admin/addCategoryOffer", {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ categoryId, offerPercentage })
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => {
            throw new Error(err.error || "An error occurred");
          });
        }
        return response.json();
      })
      .then(data => {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Category offer added successfully'
        }).then(() => {
          location.reload();
        });
      })
      .catch(error => {
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: error.message || 'An error occurred while adding the offer'
        });
      });
      
      return false;
    }

    // Remove offer function
    function removeOffer(categoryId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "You are about to remove this category offer!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch("/admin/removeCategoryOffer", {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ categoryId })
          })
          .then(response => {
            if (!response.ok) {
              return response.json().then(err => {
                throw new Error(err.error || "An error occurred");
              });
            }
            return response.json();
          })
          .then(data => {
            Swal.fire({
              icon: 'success',
              title: 'Removed!',
              text: 'Category offer has been removed successfully'
            }).then(() => {
              location.reload();
            });
          })
          .catch(error => {
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: error.message || 'An error occurred while removing the offer'
            });
          });
        }
      });
    }
  </script>
</body>