<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order #<%= order.orderId %> - TimelessEdge</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap">
    <script src="https://unpkg.com/lucide@latest"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f9fafb;
            color: #1f2937;
            line-height: 1.5;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }
        
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .back-btn {
            display: inline-flex;
            align-items: center;
            color: #4f46e5;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.2s;
        }
        
        .back-btn:hover {
            color: #4338ca;
        }
        
        .back-btn i {
            margin-right: 0.5rem;
        }
        
        .order-id {
            font-size: 1.5rem;
            font-weight: 700;
            display: flex;
            align-items: center;
        }
        
        .order-status {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.75rem;
            font-size: 0.875rem;
            font-weight: 600;
            border-radius: 9999px;
            margin-left: 1rem;
        }
        
        .status-pending {
            background-color: #fef3c7;
            color: #92400e;
        }
        
        .status-processing {
            background-color: #e0f2fe;
            color: #0369a1;
        }
        
        .status-shipped {
            background-color: #dbeafe;
            color: #1e40af;
        }
        
        .status-delivered {
            background-color: #dcfce7;
            color: #166534;
        }
        
        .status-cancelled {
            background-color: #fee2e2;
            color: #b91c1c;
        }
        
        .card {
            background-color: #ffffff;
            border-radius: 0.75rem;
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            margin-bottom: 1.5rem;
            overflow: hidden;
        }
        
        .card-header {
            background-color: #f9fafb;
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #e5e7eb;
        }
        
        .card-title {
            font-size: 1.125rem;
            font-weight: 600;
            display: flex;
            align-items: center;
        }
        
        .card-title i {
            margin-right: 0.5rem;
            color: #4f46e5;
        }
        
        .card-body {
            padding: 1.5rem;
        }
        
        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
        }
        
        .info-item h4 {
            font-size: 0.875rem;
            font-weight: 600;
            color: #6b7280;
            margin-bottom: 0.5rem;
        }
        
        .info-item p {
            font-size: 0.95rem;
        }

        .product-item {
            display: grid;
            grid-template-columns: 80px 1fr 120px 120px;
            gap: 1rem;
            padding: 1rem 0;
            border-bottom: 1px solid #e5e7eb;
        }
        
        .product-item:last-child {
            border-bottom: none;
        }
        
        .product-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 0.5rem;
            border: 1px solid #e5e7eb;
        }
        
        .product-info h3 {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
        }
        
        .product-meta {
            font-size: 0.875rem;
            color: #6b7280;
            margin-bottom: 0.5rem;
        }
        
        .product-status {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            font-weight: 600;
            border-radius: 9999px;
        }
        
        .product-actions {
            margin-top: 0.5rem;
        }
        
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
            font-weight: 500;
            border-radius: 0.375rem;
            border: none;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
        
        .btn-primary {
            background-color: #4f46e5;
            color: white;
        }
        
        .btn-primary:hover {
            background-color: #4338ca;
        }
        
        .btn-danger {
            background-color: #ef4444;
            color: white;
        }
        
        .btn-danger:hover {
            background-color: #dc2626;
        }
        
        .btn-warning {
            background-color: #f59e0b;
            color: white;
        }
        
        .btn-warning:hover {
            background-color: #d97706;
        }
        
        .btn-info {
            background-color: #0ea5e9;
            color: white;
        }
        
        .btn-info:hover {
            background-color: #0284c7;
        }
        
        .product-quantity {
            text-align: center;
            font-weight: 500;
        }
        
        .product-price {
            text-align: right;
            font-weight: 600;
        }
        
        .order-summary {
            display: grid;
            grid-template-columns: 1fr auto;
            gap: 0.5rem;
            font-size: 0.95rem;
        }
        
        .summary-row {
            padding: 0.5rem 0;
        }
        
        .summary-row.total {
            font-weight: 700;
            font-size: 1.125rem;
            margin-top: 0.5rem;
            padding-top: 0.5rem;
            border-top: 2px solid #e5e7eb;
        }
        
        .address-details {
            line-height: 1.6;
        }

        @media (max-width: 768px) {
            .product-item {
                grid-template-columns: 60px 1fr;
                row-gap: 0.5rem;
            }
            
            .product-image {
                width: 60px;
                height: 60px;
            }
            
            .product-quantity, .product-price {
                text-align: left;
            }
            
            .product-actions {
                grid-column: span 2;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="page-header">
            <a href="/profile#orders" class="back-btn">
                <i data-lucide="arrow-left"></i>
                Back to Orders
            </a>
            
            <div>
                <span class="order-id">Order #<%= order.orderId %></span>
                <span class="order-status <%= order.status === 'Pending' ? 'status-pending' : 
                                            order.status === 'Processing' ? 'status-processing' : 
                                            order.status === 'Shipped' ? 'status-shipped' : 
                                            order.status === 'Delivered' ? 'status-delivered' : 
                                            'status-cancelled' %>">
                    <%= order.status %>
                </span>
            </div>
        </div>
        
        <!-- Order Information -->
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">
                    <i data-lucide="info"></i>
                    Order Information
                </h2>
            </div>
            <div class="card-body">
                <div class="info-grid">
                    <div class="info-item">
                        <h4>Order Date</h4>
                        <p><%= new Date(order.createdOn).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                    </div>
                    <div class="info-item">
                        <h4>Payment Method</h4>
                        <p><%= order.paymentMethod || 'Online Payment' %></p>
                    </div>
                    <div class="info-item">
                        <h4>Invoice Date</h4>
                        <p><%= new Date(order.invoiceDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                    </div>
                    <% if (order.couponApplied) { %>
                    <div class="info-item">
                        <h4>Coupon Applied</h4>
                        <p>Yes</p>
                    </div>
                    <% } %>
                </div>
            </div>
        </div>
        
        <!-- Shipping Information -->
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">
                    <i data-lucide="map-pin"></i>
                    Shipping Information
                </h2>
            </div>
            <div class="card-body">
                <div class="address-details">
                    <p><strong><%= address.name %></strong></p>
                    <p><%= address.landMark %></p>
                    <p><%= address.city %>, <%= address.state %> - <%= address.pincode %></p>
                    <p>Phone: <%= address.phone %></p>
                    <% if (address.altPhone) { %>
                    <p>Alternative Phone: <%= address.altPhone %></p>
                    <% } %>
                    <p><span class="product-status status-processing"><%= address.adressType %> Address</span></p>
                </div>
            </div>
        </div>
        
        <!-- Order Items -->
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">
                    <i data-lucide="shopping-bag"></i>
                    Order Items
                </h2>
            </div>
            <div class="card-body">
                <% order.orderedItems.forEach(item => { %>
                <div class="product-item">
                    <img src="<%= item.product.productImages[0] %>" alt="<%= item.product.productName %>" class="product-image">
                    
                    <div class="product-info">
                        <h3><%= item.product.productName %></h3>
                        <div class="product-meta">
                            <p>Color: <%= item.product.color %></p>
                        </div>
                        <span class="product-status <%= 
                            item.status === 'Processing' ? 'status-processing' : 
                            item.status === 'Shipped' ? 'status-shipped' : 
                            item.status === 'Delivered' ? 'status-delivered' : 
                            item.status === 'Cancelled' ? 'status-cancelled' : 
                            'status-pending' %>">
                            <%= item.status || 'Pending' %>
                        </span>
                        
                        <div class="product-actions">
                            <% if (item.status === 'Processing') { %>
                            <button class="btn btn-sm btn-danger" onclick="cancelIndividualItem('<%= order._id %>', '<%= item._id %>')">
                                Cancel Item
                            </button>
                            <% } else if (item.status === 'Failed') { %>
                            <button class="btn btn-sm btn-danger" onclick="cancelIndividualItem('<%= order._id %>')">
                                Cancel Payment
                            </button>
                            <% } else if (item.status === 'Delivered') { %>
                            <button class="btn btn-sm btn-warning" onclick="returnDeliveredItem('<%= order._id %>', '<%= item._id %>')">
                                Return Item
                            </button>
                            <button class="btn btn-sm btn-info" onclick="downloadInvoice('<%= order._id %>','<%= item._id %>')">
                                Download Invoice
                            </button>
                            <% } %>
                        </div>
                    </div>
                    
                    <div class="product-quantity">
                        Qty: <%= item.quantity %>
                    </div>
                    
                    <div class="product-price">
                        ₹<%= item.price.toLocaleString() %>
                    </div>
                </div>
                <% }); %>
            </div>
        </div>
        
        <!-- Order Summary -->
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">
                    <i data-lucide="receipt"></i>
                    Order Summary
                </h2>
            </div>
            <div class="card-body">
                <div class="order-summary">
                    <div class="summary-row">Subtotal</div>
                    <div class="summary-row">₹<%= order.totalPrice.toLocaleString() %></div>
                    
                    <% if (order.discount > 0) { %>
                    <div class="summary-row">Discount</div>
                    <div class="summary-row">- ₹<%= order.discount.toLocaleString() %></div>
                    <% } %>
                    
                    <div class="summary-row total">Total</div>
                    <div class="summary-row total">₹<%= order.finalAmount.toLocaleString() %></div>
                </div>
            </div>
        </div>
        
        <!-- Order Actions -->
        <% if (order.status === 'Pending' || order.status === 'Processing') { %>
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">
                    <i data-lucide="settings"></i>
                    Order Actions
                </h2>
            </div>
            <div class="card-body">
                <button class="btn btn-danger" onclick="cancelOrder('<%= order._id %>')">
                    <i data-lucide="x"></i>
                    Cancel Order
                </button>
            </div>
        </div>
        <% } %>
    </div>

    <script>
        // Initialize lucide icons
        lucide.createIcons();
        
        // Function to handle order cancellation
        async function cancelOrder(orderId) {
            if (confirm('Are you sure you want to cancel this order?')) {
                try {
                    const response = await fetch(`/api/orders/${orderId}/cancel`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    
                    if (response.ok) {
                        alert('Order cancelled successfully');
                        window.location.reload();
                    } else {
                        alert('Failed to cancel order. Please try again.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while cancelling the order.');
                }
            }
        }
        
        // Function to handle individual item cancellation
        async function cancelIndividualItem(orderId, itemId) {
            if (confirm('Are you sure you want to cancel this item?')) {
                try {
                    const response = await fetch(`/api/orders/${orderId}/items/${itemId}/cancel`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    
                    if (response.ok) {
                        alert('Item cancelled successfully');
                        window.location.reload();
                    } else {
                        alert('Failed to cancel item. Please try again.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while cancelling the item.');
                }
            }
        }
        
        // Function to handle item return
        async function returnDeliveredItem(orderId, itemId) {
            if (confirm('Are you sure you want to return this item?')) {
                try {
                    const response = await fetch(`/api/orders/${orderId}/items/${itemId}/return`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    
                    if (response.ok) {
                        alert('Return request submitted successfully');
                        window.location.reload();
                    } else {
                        alert('Failed to submit return request. Please try again.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while submitting the return request.');
                }
            }
        }
        
        // Function to download invoice
        async function downloadInvoice(orderId, itemId) {
            try {
                window.location.href = `/api/orders/${orderId}/items/${itemId}/invoice`;
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while downloading the invoice.');
            }
        }
    </script>
</body>
</html>