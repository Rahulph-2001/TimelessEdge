<%- include("../../views/partials/user/header") %>

<style>
:root {
  --primary-color: #3b82f6;
  --secondary-color: #f43f5e;
  --success-color: #10b981;
  --warning-color: #f59e0b;
  --danger-color: #ef4444;
  --light-color: #f9fafb;
  --dark-color: #111827;
  --gray-color: #6b7280;
  --border-radius: 8px;
  --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05), 0 1px 3px rgba(0, 0, 0, 0.1);
  --transition: all 0.3s ease;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  color: #333;
  line-height: 1.5;
}

.main-container {
  padding: 2rem 1rem;
  background-color: #f5f7fa;
  min-height: 100vh;
}

.shop-page {
  max-width: 1200px;
  margin: 0 auto;
}

.shop-topbar {
  margin-bottom: 2rem;
  background-color: white;
  padding: 1.5rem;
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  border: 1px solid #edf2f7;
}

.search-bar {
  max-width: 600px;
  margin: 0 auto;
}

.search-form {
  display: flex;
  gap: 0.5rem;
}

.search-input {
  flex: 1;
  padding: 0.85rem 1.25rem;
  border: 1px solid #e2e8f0;
  border-radius: var(--border-radius);
  font-size: 1rem;
  transition: var(--transition);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.search-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
}

.search-button {
  padding: 0.85rem 1.5rem;
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: var(--border-radius);
  cursor: pointer;
  font-weight: 600;
  transition: var(--transition);
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.search-button:hover {
  background: #2563eb;
  transform: translateY(-1px);
  box-shadow: 0 4px 6px rgba(37, 99, 235, 0.2);
}

.product-list-container {
  display: flex;
  gap: 2rem;
}

/* New Filter Sidebar Styles */
.sidebar {
  width: 300px;
  flex-shrink: 0;
  background: white;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  overflow: hidden;
  padding: 0;
  border: 1px solid #edf2f7;
}

.filter-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.25rem 1.5rem;
  border-bottom: 1px solid #f1f5f9;
  background: #f8fafc;
}

.filter-header h3 {
  font-size: 1.1rem;
  font-weight: 600;
  color: #1e293b;
  margin: 0;
}

.reset-filters-btn {
  background: transparent;
  border: none;
  color: #64748b;
  font-size: 0.85rem;
  font-weight: 500;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.35rem 0.5rem;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.reset-filters-btn:hover {
  background: #f1f5f9;
  color: #334155;
}

.filter-group {
  padding: 1.25rem 1.5rem;
  border-bottom: 1px solid #f1f5f9;
}

.filter-group:last-child {
  border-bottom: none;
}

.filter-group-header {
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
}

.filter-group-header h4 {
  font-size: 0.95rem;
  font-weight: 600;
  color: #334155;
  margin: 0;
}

.filter-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  background: #f1f5f9;
  border-radius: 6px;
  margin-right: 0.75rem;
  color: var(--primary-color);
}

.price-range-control {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.price-inputs {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.price-input-wrapper {
  position: relative;
  flex: 1;
}

.currency-symbol {
  position: absolute;
  left: 0.75rem;
  top: 50%;
  transform: translateY(-50%);
  color: #64748b;
  font-weight: 500;
}

.price-input {
  width: 100%;
  padding: 0.75rem 0.75rem 0.75rem 1.75rem;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  font-size: 0.9rem;
  transition: all 0.2s ease;
  background: #f8fafc;
}

.price-input:focus {
  outline: none;
  border-color: var(--primary-color);
  background: white;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.15);
}

.price-range-divider {
  width: 12px;
  height: 1px;
  background: #cbd5e1;
}

.slider-container {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.price-slider {
  width: 100%;
  height: 4px;
  -webkit-appearance: none;
  appearance: none;
  background: linear-gradient(to right, #e2e8f0, #e2e8f0);
  border-radius: 2px;
  outline: none;
}

.price-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: white;
  cursor: pointer;
  border: 2px solid var(--primary-color);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
}

.price-slider::-webkit-slider-thumb:hover {
  transform: scale(1.1);
  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
}

.slider-labels {
  display: flex;
  justify-content: space-between;
  font-size: 0.75rem;
  color: #64748b;
}

.select-wrapper {
  position: relative;
}

.filter-select {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  font-size: 0.9rem;
  transition: all 0.2s ease;
  appearance: none;
  background: #f8fafc;
  color: #334155;
  cursor: pointer;
}

.filter-select:focus {
  outline: none;
  border-color: var(--primary-color);
  background: white;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.15);
}

.select-arrow {
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  color: #64748b;
  pointer-events: none;
  transition: all 0.2s ease;
}

.filter-select:focus + .select-arrow {
  color: var(--primary-color);
}

.apply-filters-btn {
  width: calc(100% - 3rem);
  margin: 0 1.5rem 1.5rem;
  padding: 0.9rem 1rem;
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-weight: 600;
  font-size: 0.95rem;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  box-shadow: 0 4px 6px rgba(59, 130, 246, 0.2);
}

.apply-filters-btn:hover {
  background: #2563eb;
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(37, 99, 235, 0.3);
}

.apply-filters-btn:active {
  transform: translateY(0);
  box-shadow: 0 4px 6px rgba(59, 130, 246, 0.2);
}

.product-grid {
  flex: 1;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 1.5rem;
}

.product-card {
  background: white;
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  padding: 1.25rem;
  display: flex;
  flex-direction: column;
  position: relative;
  height: 420px;
  overflow: hidden;
  transition: var(--transition);
  border: 1px solid #edf2f7;
}

.product-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
}

.product-card img {
  width: 100%;
  height: 200px;
  object-fit: cover;
  border-radius: calc(var(--border-radius) - 2px);
  margin-bottom: 1rem;
  transition: var(--transition);
}

.product-card:hover img {
  transform: scale(1.05);
}

.product-card h4 {
  margin: 0.5rem 0;
  font-size: 1.1rem;
  line-height: 1.4;
  font-weight: 600;
  color: var(--dark-color);
}

.product-card p {
  margin: 0.5rem 0;
  color: var(--gray-color);
  flex-grow: 1;
  font-size: 0.9rem;
  line-height: 1.5;
}

.wishlist-btn {
  position: absolute;
  top: 0.75rem;
  right: 0.75rem;
  cursor: pointer;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  z-index: 5;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  transition: var(--transition);
  color: #d1d5db;
}

.wishlist-btn svg {
  width: 20px;
  height: 20px;
  stroke: currentColor;
  fill: transparent;
  stroke-width: 2;
  transition: all 0.3s ease;
}

.wishlist-btn:hover {
  transform: scale(1.1);
  background-color: #fff5f5;
}

.wishlist-btn:hover svg {
  color: var(--secondary-color);
}

.wishlist-btn.active svg {
  fill: var(--secondary-color);
  color: var(--secondary-color);
}

.add-to-cart-btn {
  width: 100%;
  padding: 0.85rem;
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: var(--border-radius);
  cursor: pointer;
  margin-top: auto;
  font-weight: 600;
  transition: var(--transition);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  font-size: 0.95rem;
  letter-spacing: 0.5px;
  box-shadow: 0 4px 6px rgba(59, 130, 246, 0.2);
  text-transform: uppercase;
  position: relative;
  overflow: hidden;
}

.add-to-cart-btn::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 300%;
  height: 300%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0));
  transform: translate(-50%, -50%) scale(0);
  transition: transform 0.5s ease, opacity 0.5s ease;
  border-radius: 50%;
  opacity: 0;
}

.add-to-cart-btn:hover::before {
  transform: translate(-50%, -50%) scale(1);
  opacity: 1;
}

.add-to-cart-btn:hover {
  background: #2563eb;
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(37, 99, 235, 0.2);
}

.add-to-cart-btn:active {
  transform: translateY(0);
  box-shadow: 0 4px 6px rgba(59, 130, 246, 0.2);
}

.add-to-cart-btn:disabled {
  background: #9ca3af;
  opacity: 0.8;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.add-to-cart-btn svg {
  width: 20px;
  height: 20px;
  transition: transform 0.3s ease;
}

.add-to-cart-btn:hover svg {
  transform: rotate(360deg);
}

.offer-badge {
  position: absolute;
  top: 10px;
  left: 10px;
  background-color: var(--secondary-color);
  color: white;
  padding: 6px 12px;
  border-radius: 20px;
  font-weight: 600;
  font-size: 0.85rem;
  z-index: 5;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.product-offer {
  background-color: var(--secondary-color);
}

.category-offer {
  background-color: var(--success-color);
}

.offer-details {
  display: none;
  position: absolute;
  top: 40px;
  left: 10px;
  background-color: white;
  border: 1px solid #e2e8f0;
  padding: 8px 12px;
  border-radius: var(--border-radius);
  font-size: 0.85rem;
  z-index: 10;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
}

.product-card:hover .offer-details {
  display: block;
}

.price-section {
  margin: 0.75rem 0;
  line-height: 1.5;
}

.sale-price {
  font-weight: 700;
  color: var(--secondary-color);
  font-size: 1.2rem;
}

.original-price {
  color: var(--gray-color);
  margin-left: 5px;
  font-size: 0.9rem;
  text-decoration: line-through;
}

.savings {
  display: block;
  color: var(--success-color);
  font-size: 0.9rem;
  font-weight: 600;
  margin-top: 0.25rem;
}

.pagination {
  margin-top: 2.5rem;
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  flex-wrap: wrap;
  align-items: center;
}

.pagination a, .pagination span {
  padding: 0.6rem 1rem;
  border: 1px solid #e2e8f0;
  border-radius: var(--border-radius);
  text-decoration: none;
  color: var(--dark-color);
  min-width: 2.5rem;
  text-align: center;
  transition: var(--transition);
  font-weight: 500;
  background: white;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.pagination a:hover {
  background: #f0f7ff;
  border-color: var(--primary-color);
  color: var(--primary-color);
  transform: translateY(-1px);
}

.pagination a.active {
  background: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
  font-weight: 600;
}

.pagination .page-info {
  margin: 0 1rem;
  color: var(--gray-color);
  border: none;
  padding: 0.5rem;
  font-size: 0.9rem;
  background: transparent;
  box-shadow: none;
}

.pagination .ellipsis {
  border: none;
  padding: 0.5rem;
  color: var(--gray-color);
  background: transparent;
  box-shadow: none;
}

.pagination .disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

.no-products {
  grid-column: 1 / -1;
  text-align: center;
  padding: 3rem;
  background: white;
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
}

.no-products h3 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  color: var(--dark-color);
  font-weight: 600;
}

.no-products p {
  color: var(--gray-color);
  font-size: 1.1rem;
}

.filter-icon {
  display: inline-block;
  width: 20px;
  height: 20px;
  margin-right: 8px;
  vertical-align: middle;
}

.product-count {
  text-align: center;
  margin: 1.5rem 0;
  color: var(--gray-color);
  font-size: 0.95rem;
  background-color: white;
  padding: 0.75rem;
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  border: 1px solid #edf2f7;
}

@media (max-width: 992px) {
  .product-grid {
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    gap: 1.25rem;
  }
}

@media (max-width: 768px) {
  .product-list-container {
    flex-direction: column;
  }

  .sidebar {
    width: 100%;
    margin-bottom: 1.5rem;
  }
  
  .pagination {
    gap: 0.25rem;
  }
  
  .pagination a, .pagination span {
    padding: 0.5rem 0.75rem;
    font-size: 0.9rem;
  }
  
  .pagination .page-info {
    display: none;
  }

  .shop-topbar {
    padding: 1.25rem;
  }

  .filter-section {
    padding: 1.25rem;
    margin-bottom: 1rem;
  }
}

@media (max-width: 576px) {
  .product-grid {
    grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));
  }

  .product-card {
    height: auto;
    min-height: 420px;
  }
  
  .main-container {
    padding: 1rem 0.75rem;
  }
}
</style>
<div
class="main-container">
  <section class="shop-page container">
      <div class="shop-topbar">
          <div class="search-bar">
              <form action="/shop" method="GET" class="search-form" id="filterForm">
                  <input type="text" name="search" placeholder="Search products..." class="search-input" value="<%= query?.search || '' %>" />
                  <input type="hidden" name="priceMin" id="priceMin" value="<%= query?.priceMin || '' %>" />
                  <input type="hidden" name="priceMax" id="priceMax" value="<%= query?.priceMax || '' %>" />
                  <input type="hidden" name="category" id="categoryInput" value="<%= query?.category || '' %>" />
                  <input type="hidden" name="brand" id="brandInput" value="<%= query?.brand || '' %>" />
                  <input type="hidden" name="sort" id="sortInput" value="<%= query?.sort || 'asc' %>" />
                  <input type="hidden" name="page" id="pageInput" value="1" />
                  <button type="submit" class="search-button">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" style="margin-right: 4px;"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>
                      Search
                  </button>
              </form>
          </div>
      </div>

      <div class="product-list-container">
          <aside class="sidebar">
    <div class="filter-header">
        <h3>Filters</h3>
        <button id="clearFilters" class="reset-filters-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M3 3h18v18H3z"></path><path d="M21 3l-9 9"></path><path d="M12 12l-9 9"></path></svg>
            Reset
        </button>
    </div>
    
    <div class="filter-group">
        <div class="filter-group-header">
            <span class="filter-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><line x1="12" y1="1" x2="12" y2="23"></line><path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path></svg>
            </span>
            <h4>Price Range</h4>
        </div>
        <div class="price-range-control">
            <div class="price-inputs">
                <div class="price-input-wrapper">
                    <span class="currency-symbol">₹</span>
                    <input type="number" id="minPrice" class="price-input" placeholder="Min" value="<%= query?.priceMin || '' %>">
                </div>
                <div class="price-range-divider"></div>
                <div class="price-input-wrapper">
                    <span class="currency-symbol">₹</span>
                    <input type="number" id="maxPrice" class="price-input" placeholder="Max" value="<%= query?.priceMax || '' %>">
                </div>
            </div>
            <div class="slider-container">
                <input type="range" id="priceSlider" min="0" max="10000000" step="1000" class="price-slider" value="<%= query?.priceMax || 100000 %>">
                <div class="slider-labels">
                    <span>₹0</span>
                    <span>₹10M</span>
                </div>
            </div>
        </div>
    </div>
    
    <div class="filter-group">
        <div class="filter-group-header">
            <span class="filter-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><polygon points="12 2 2 7 12 12 22 7 12 2"></polygon><polyline points="2 17 12 22 22 17"></polyline><polyline points="2 12 12 17 22 12"></polyline></svg>
            </span>
            <h4>Category</h4>
        </div>
        <div class="select-wrapper">
            <select id="categoryFilter" class="filter-select">
                <option value="">All Categories</option>
                <% categories.forEach(category => { %>
                    <option value="<%= category._id %>" <%= query?.category == category._id ? 'selected' : '' %>><%= category.name %></option>
                <% }); %>
            </select>
            <span class="select-arrow">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
            </span>
        </div>
    </div>
    
    <div class="filter-group">
        <div class="filter-group-header">
            <span class="filter-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path><line x1="7" y1="7" x2="7.01" y2="7"></line></svg>
            </span>
            <h4>Brand</h4>
        </div>
        <div class="select-wrapper">
            <select id="brandFilter" class="filter-select">
                <option value="">All Brands</option>
                <% brands.forEach(brand => { %>
                    <option value="<%= brand._id %>" <%= query?.brand == brand._id ? 'selected' : '' %>><%= brand.name %></option>
                <% }); %>
            </select>
            <span class="select-arrow">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
            </span>
        </div>
    </div>
    
    <div class="filter-group">
        <div class="filter-group-header">
            <span class="filter-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><line x1="4" y1="21" x2="4" y2="14"></line><line x1="4" y1="10" x2="4" y2="3"></line><line x1="12" y1="21" x2="12" y2="12"></line><line x1="12" y1="8" x2="12" y2="3"></line><line x1="20" y1="21" x2="20" y2="16"></line><line x1="20" y1="12" x2="20" y2="3"></line><line x1="1" y1="14" x2="7" y2="14"></line><line x1="9" y1="8" x2="15" y2="8"></line><line x1="17" y1="16" x2="23" y2="16"></line></svg>
            </span>
            <h4>Sort By</h4>
        </div>
        <div class="select-wrapper">
            <select id="sortOrder" class="filter-select">
                <option value="asc" <%= query?.sort === 'asc' ? 'selected' : '' %>>A - Z</option>
                <option value="desc" <%= query?.sort === 'desc' ? 'selected' : '' %>>Z - A</option>
                <option value="price_low" <%= query?.sort === 'price_low' ? 'selected' : '' %>>Price: Low to High</option>
                <option value="price_high" <%= query?.sort === 'price_high' ? 'selected' : '' %>>Price: High to Low</option>
                <option value="newest" <%= query?.sort === 'newest' ? 'selected' : '' %>>Newest First</option>
            </select>
            <span class="select-arrow">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
            </span>
        </div>
    </div>
    
    <input type="hidden" name="priceMin" id="priceMin" value="<%= query?.priceMin || '' %>" />
    <input type="hidden" name="priceMax" id="priceMax" value="<%= query?.priceMax || '' %>" />
    <input type="hidden" name="category" id="categoryInput" value="<%= query?.category || '' %>" />
    <input type="hidden" name="brand" id="brandInput" value="<%= query?.brand || '' %>" />
    <input type="hidden" name="sort" id="sortInput" value="<%= query?.sort || 'asc' %>" />
    
    <button id="applyFilters" class="apply-filters-btn">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon></svg>
        Apply Filters
    </button>
</aside>

          <main class="product-grid">
              <% if (products && products.length > 0) { %>
                  <% products.forEach(product => { %>
                      <div class="product-card">
                          <button class="wishlist-btn" data-product="<%= product._id %>">
                              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" strokeLinecap="round" strokeLinejoin="round">
                                  <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                              </svg>
                          </button>
                          
                          <!-- Offer badge if available -->
                          <% if (product.bestOffer > 0) { %>
                              <div class="offer-badge <%= product.offerType %>-offer">
                                  <%= product.bestOffer %>% OFF
                              </div>
                              <!-- Hover tooltip with offer details -->
                              <div class="offer-details">
                                  <% if (product.offerType === 'product') { %>
                                      Product offer: <%= product.productOffer %>% off
                                  <% } else { %>
                                      Category offer: <%= product.categoryOffer %>% off
                                  <% } %>
                              </div>
                          <% } %>
                          
                          <a href="/productDetails?id=<%= product._id %>">
                              <img src="<%= product.image %>" alt="<%= product.productName %>" />
                          </a>
                          <h4><%= product.productName %></h4>
                          <p><%= product.description ? (product.description.length > 60 ? product.description.substring(0, 60) + '...' : product.description) : '' %></p>
                          
                          <p class="price-section">
                              <% if (product.offerPrice) { %>
                                  <span class="sale-price">₹<%= product.offerPrice %></span>
                                  <span class="original-price">₹<%= product.salePrice %></span>
                                  <span class="savings">Save ₹<%= product.savedAmount %></span>
                              <% } else { %>
                                  <span class="sale-price">₹<%= product.salePrice %></span>
                                  <% if(product.oldPrice) { %>
                                      <span class="original-price">₹<%= product.oldPrice %></span>
                                  <% } %>
                              <% } %>
                          </p>
                          
                          <% if (product.quantity <= 0) { %>
                              <button class="add-to-cart-btn" disabled>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line></svg>
                                  OUT OF STOCK
                              </button>
                          <% } else { %>
                              <button class="add-to-cart-btn" data-product="<%= product._id %>">
                                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path></svg>
                                  ADD TO CART
                              </button>
                          <% } %>
                      </div>
                  <% }); %>
              <% } else { %>
                  <div class="no-products">
                      <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="#6b7280" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" style="margin-bottom: 1rem;"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line></svg>
                      <h3>No products found</h3>
                      <p>Try adjusting your filters or search criteria</p>
                  </div>
              <% } %>
          </main>
      </div>
     
      <% if (totalPages > 1) { %>
          <div class="pagination">
              <% 
              // Calculate the range of pages to show
              let startPage = Math.max(1, currentPage - 2);
              let endPage = Math.min(totalPages, startPage + 4);
              
              // Adjust the range if needed
              if (endPage - startPage < 4) {
                  startPage = Math.max(1, endPage - 4);
              }
              
              // Create query string without the page parameter
              const queryObj = {...query};
              delete queryObj.page;
              const queryString = Object.keys(queryObj).length ? new URLSearchParams(queryObj).toString() : '';
              
              // Previous page button
              const prevPageClass = currentPage <= 1 ? 'disabled' : '';
              %>
              
              <a href="<%= currentPage > 1 ? `/shop?page=${currentPage - 1}${queryString ? '&' + queryString : ''}` : '#' %>" 
                 class="<%= prevPageClass %>" aria-label="Previous page">
                  &laquo;
              </a>
              
              <% // First page if not in range
              if (startPage > 1) { %>
                  <a href="/shop?page=1<%= queryString ? '&' + queryString : '' %>">1</a>
                  <% if (startPage > 2) { %>
                      <span class="ellipsis">...</span>
                  <% } %>
              <% } %>
              
              <% // Page numbers
              for(let i = startPage; i <= endPage; i++) { %>
                  <a href="/shop?page=<%= i %><%= queryString ? '&' + queryString : '' %>" 
                     class="<%= currentPage === i ? 'active' : '' %>" 
                     aria-label="Page <%= i %>" 
                     aria-current="<%= currentPage === i ? 'page' : undefined %>">
                      <%= i %>
                  </a>
              <% } %>
              
              <% // Last page if not in range
              if (endPage < totalPages) { %>
                  <% if (endPage < totalPages - 1) { %>
                      <span class="ellipsis">...</span>
                  <% } %>
                  <a href="/shop?page=<%= totalPages %><%= queryString ? '&' + queryString : '' %>">
                      <%= totalPages %>
                  </a>
              <% } %>
              
              <% // Next page button
              const nextPageClass = currentPage >= totalPages ? 'disabled' : '';
              %>
              <a href="<%= currentPage < totalPages ? `/shop?page=${currentPage + 1}${queryString ? '&' + queryString : ''}` : '#' %>" 
                 class="<%= nextPageClass %>" aria-label="Next page">
                  &raquo;
              </a>
              
              <span class="page-info">
                  Page <%= currentPage %> of <%= totalPages %>
              </span>
          </div>
      <% } %>
      
      <% if (products && products.length > 0) { %>
          <div class="product-count">
              Showing <%= (currentPage - 1) * itemsPerPage + 1 %> - 
              <%= Math.min(currentPage * itemsPerPage, totalItems) %> 
              of <%= totalItems %> products
          </div>
      <% } %>
  </section>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const filterForm = document.getElementById('filterForm');
  const categoryFilter = document.getElementById('categoryFilter');
  const brandFilter = document.getElementById('brandFilter');
  const sortOrder = document.getElementById('sortOrder');
  const priceSlider = document.getElementById('priceSlider');
  const minPriceInput = document.getElementById('minPrice');
  const maxPriceInput = document.getElementById('maxPrice');
  const searchInput = document.querySelector('.search-input');
  
  const priceMinInput = document.getElementById('priceMin');
  const priceMaxInput = document.getElementById('priceMax');
  const categoryInput = document.getElementById('categoryInput');
  const brandInput = document.getElementById('brandInput');
  const sortInput = document.getElementById('sortInput');
  const pageInput = document.getElementById('pageInput');
  
  const applyFiltersBtn = document.getElementById('applyFilters');
  const clearFiltersBtn = document.getElementById('clearFilters');

  // Debounce function to limit the rate at which a function is executed
  function debounce(func, wait) {
      let timeout;
      return function(...args) {
          clearTimeout(timeout);
          timeout = setTimeout(() => func.apply(this, args), wait);
      };
  }

  function initializeFilters() {
      const params = new URLSearchParams(window.location.search);
      
      if (params.has('category') && params.get('category')) {
          categoryFilter.value = params.get('category');
          categoryInput.value = params.get('category');
      }
      
      if (params.has('brand') && params.get('brand')) {
          brandFilter.value = params.get('brand');
          brandInput.value = params.get('brand');
      }
      
      if (params.has('sort') && params.get('sort')) {
          sortOrder.value = params.get('sort');
          sortInput.value = params.get('sort');
      }
      
      const priceMin = params.get('priceMin') || '';
      const priceMax = params.get('priceMax') || '';
      
      minPriceInput.value = priceMin;
      maxPriceInput.value = priceMax;
      priceMinInput.value = priceMin;
      priceMaxInput.value = priceMax;
      
      if (maxPriceInput.value) {
          priceSlider.value = maxPriceInput.value;
      } else {
          priceSlider.value = 100000;
      }
  }

  function updateHiddenInputs() {
      priceMinInput.value = minPriceInput.value || '';
      priceMaxInput.value = maxPriceInput.value || '';
      categoryInput.value = categoryFilter.value;
      brandInput.value = brandFilter.value;
      sortInput.value = sortOrder.value;
      pageInput.value = 1; // Reset to page 1 when filters change
  }

  function applyFilters() {
      updateHiddenInputs();
      filterForm.submit();
  }

  // Use debounce for price input changes
  minPriceInput.addEventListener('input', debounce(function() {
      if (maxPriceInput.value && Number.parseInt(this.value) > Number.parseInt(maxPriceInput.value)) {
          this.value = maxPriceInput.value;
      }
  }, 300));

  maxPriceInput.addEventListener('input', debounce(function() {
      priceSlider.value = this.value || 100000;
      
      if (minPriceInput.value && Number.parseInt(this.value) < Number.parseInt(minPriceInput.value)) {
          minPriceInput.value = this.value;
      }
  }, 300));

  priceSlider.addEventListener('input', function() {
      maxPriceInput.value = this.value;
  });

  applyFiltersBtn.addEventListener('click', applyFilters);

  clearFiltersBtn.addEventListener('click', () => {
      searchInput.value = '';
      minPriceInput.value = '';
      maxPriceInput.value = '';
      categoryFilter.value = '';
      brandFilter.value = '';
      sortOrder.value = 'asc';
      priceSlider.value = 100000;
      
      priceMinInput.value = '';
      priceMaxInput.value = '';
      categoryInput.value = '';
      brandInput.value = '';
      sortInput.value = 'asc';
      
      filterForm.submit();
  });

  initializeFilters();

  document.querySelectorAll('.add-to-cart-btn').forEach((button) => {
      if (!button.disabled) {
          button.addEventListener('click', async function() {
              try {
                  const productId = this.getAttribute('data-product');
                  
                  const originalText = this.innerHTML;
                  this.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"></path><path d="M12 6v6l4 2"></path></svg> Adding...';
                  this.disabled = true;
                  
                  const response = await fetch('/cart/add', {
                      method: 'POST',
                      headers: {
                          'Content-Type': 'application/json'
                      },
                      body: JSON.stringify({
                          productId: productId,
                          quantity: 1
                      })
                  });
                  
                  this.innerHTML = originalText;
                  this.disabled = false;
                  
                  if (!response.ok) {
                      const errorData = await response.json();
                      throw new Error(errorData.error || 'Failed to add product to cart');
                  }
                  
                  const data = await response.json();
                  
                  Swal.fire({
                      title: 'Success!',
                      text: data.message || "Product added to cart",
                      icon: 'success',
                      confirmButtonText: 'View Cart',
                      confirmButtonColor: '#3a86ff',
                      showCancelButton: true,
                      cancelButtonText: 'Continue Shopping',
                      cancelButtonColor: '#6c757d'
                  }).then((result) => {
                      if (result.isConfirmed) {
                          window.location.href = '/cart';
                      }
                  });
                  
              } catch (error) {
                  console.error('Error:', error);
                  
                  this.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path></svg> Add to Cart';
                  this.disabled = false;
                  
                  if (error.message.includes('not authenticated') || error.message.includes('not logged in')) {
                      Swal.fire({
                          title: 'Not Logged In',
                          text: "Please login to add items to cart",
                          icon: 'info',
                          confirmButtonText: 'Login',
                          confirmButtonColor: '#3a86ff',
                          showCancelButton: true,
                          cancelButtonText: 'Cancel',
                          cancelButtonColor: '#6c757d'
                      }).then((result) => {
                          if(result.isConfirmed) {
                              window.location.href = '/login';
                          }
                      });
                  } else {
                      Swal.fire({
                          title: 'Error',
                          text: error.message || "Error adding product to cart",
                          icon: 'error',
                          confirmButtonText: 'Ok',
                          confirmButtonColor: '#3a86ff'
                      });
                  }
              }
          });
      }
  });

  document.querySelectorAll('.wishlist-btn').forEach((button) => {
      button.addEventListener('click', async function() {
          try {
              const productId = this.getAttribute('data-product');
              
              // Show loading state
              const originalHTML = this.innerHTML;
              this.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"></path><path d="M12 6v6l4 2"></path></svg>';
              
              const response = await fetch(`/wishlist/add/${productId}`, {
                  method: 'POST',
                  headers: {
                      'Content-Type': 'application/json',
                       'X-Requested-With': 'XMLHttpRequest'
                  }
              });
              
              this.innerHTML = originalHTML;
              
              if (!response.ok) {
                  const errorData = await response.json();
                  throw new Error(errorData.message || 'Failed to add product to wishlist');
              }
              
              const data = await response.json();
              
              this.classList.add('active');
              
              Swal.fire({
                  title: 'Success!',
                  text: "Product added to wishlist",
                  icon: 'success',
                  confirmButtonText: 'View Wishlist',
                  confirmButtonColor: '#3a86ff',
                  showCancelButton: true,
                  cancelButtonText: 'Continue Shopping',
                  cancelButtonColor: '#6c757d'
              }).then((result) => {
                  if (result.isConfirmed) {
                      window.location.href = '/wishlist';
                  }
              });
              
          } catch (error) {
              console.error('Error:', error);
              
              this.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" strokeLinecap="round" strokeLinejoin="round"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>';
              
              if (error.message && (
                  error.message.includes('not authenticated') || 
                  error.message.includes('not logged in') ||
                  error.message.includes('login required') ||
                  error.message.includes('unauthorized')
              )) {
                  Swal.fire({
                      title: 'Not Logged In',
                      text: "Please login to add items to wishlist",
                      icon: 'info',
                      confirmButtonText: 'Login',
                      confirmButtonColor: '#3a86ff',
                      showCancelButton: true,
                      cancelButtonText: 'Cancel',
                      cancelButtonColor: '#6c757d'
                  }).then((result) => {
                      if(result.isConfirmed) {
                          window.location.href = '/login';
                      }
                  });
              } else {
                  Swal.fire({
                      title: 'Error',
                      text: error.message || "Error adding product to wishlist",
                      icon: 'error',
                      confirmButtonText: 'Ok',
                      confirmButtonColor: '#3a86ff'
                  });
              }
          }
      });
  });

  filterForm.addEventListener('submit', (e) => {
      if (minPriceInput.value && maxPriceInput.value) {
          if (Number.parseInt(minPriceInput.value) > Number.parseInt(maxPriceInput.value)) {
              e.preventDefault();
              Swal.fire({
                  title: 'Invalid Price Range',
                  text: 'Minimum price cannot be greater than maximum price',
                  icon: 'error',
                  confirmButtonText: 'Ok',
                  confirmButtonColor: '#3a86ff'
              });
          }
      }
  });
  
  document.querySelectorAll('.pagination a:not(.disabled)').forEach((link) => {
      link.addEventListener('click', function(e) {
          if (this.getAttribute('href') === '#') {
              e.preventDefault();
              return;
          }
      });
  });

  console.log('Filter and pagination initialization complete');
});
</script>

<%- include("../../views/partials/user/footer") %>

