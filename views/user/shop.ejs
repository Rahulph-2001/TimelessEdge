<%- include("../../views/partials/user/header") %>

<style>
.main-container {
    padding: 2rem;
}

.shop-page {
    max-width: 1200px;
    margin: 0 auto;
}

.shop-topbar {
    margin-bottom: 2rem;
}

.search-bar {
    max-width: 600px;
    margin: 0 auto;
}

.search-form {
    display: flex;
    gap: 1rem;
}

.search-input {
    flex: 1;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.search-button {
    padding: 0.75rem 1.5rem;
    background: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.product-list-container {
    display: flex;
    gap: 2rem;
}

.sidebar {
    width: 250px;
    flex-shrink: 0;
}

.filter-section {
    margin-bottom: 1.5rem;
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 4px;
}

.filter-title {
    font-weight: bold;
    margin-bottom: 0.75rem;
}

.filter-dropdown {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 0.5rem;
}

.price-options {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.price-button {
    width: 100%;
    padding: 0.5rem;
    text-align: left;
    background: white;
    border: 1px solid #ddd;
    border-radius: 4px;
    cursor: pointer;
}

.price-button:hover {
    background: #f0f0f0;
}

.price-button.active {
    background: #007bff;
    color: white;
}

.product-grid {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
}

.product-card {
    background: white;
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    position: relative;
    height: 400px;
}

.product-card img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 4px;
    margin-bottom: 1rem;
}

.product-card h4 {
    margin: 0.5rem 0;
    font-size: 1.1rem;
    line-height: 1.4;
}

.product-card p {
    margin: 0.5rem 0;
    color: #666;
    flex-grow: 1;
}

.wishlist-btn {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    cursor: pointer;
    background: white;
    border-radius: 50%;
    padding: 0.25rem;
}

.add-to-cart-btn {
    width: 100%;
    padding: 0.75rem;
    background: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-top: auto;
}

.add-to-cart-btn:hover {
    background: #0056b3;
}

.pagination {
    margin-top: 2rem;
    display: flex;
    justify-content: center;
    gap: 0.5rem;
}

.pagination a {
    padding: 0.5rem 1rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    text-decoration: none;
    color: #333;
}

.pagination a.active {
    background: #007bff;
    color: white;
    border-color: #007bff;
}
</style>

<div class="main-container">
    <section class="shop-page container">
        <div class="shop-topbar">
            <div class="search-bar">
               <form action="/filter" method="GET" class="search-form" id="filterForm">
                    <input type="text" name="search" placeholder="Search items..." class="search-input" value="<%= query?.search || '' %>" />
                    <input type="hidden" name="priceMin" id="priceMin" value="<%= query?.priceMin || '' %>" />
                    <input type="hidden" name="priceMax" id="priceMax" value="<%= query?.priceMax || '' %>" />
                    <input type="hidden" name="category" id="categoryInput" value="<%= query?.category || '' %>" />
                    <input type="hidden" name="brand" id="brandInput" value="<%= query?.brand || '' %>" />
                    <button type="submit" class="search-button">Search</button>
                </form>
            </div>
        </div>

        <div class="product-list-container">
            <aside class="sidebar">
                <div class="filter-section">
                    <div class="filter-title">Price Range</div>
                    <div class="price-options">
                        <button class="price-button" data-min="0" data-max="1000">Under ₹1,000</button>
                        <button class="price-button" data-min="1000" data-max="5000">₹1,000 - ₹5,000</button>
                        <button class="price-button" data-min="5000" data-max="10000">₹5,000 - ₹10,000</button>
                        <button class="price-button" data-min="10000" data-max="25000">₹10,000 - ₹25,000</button>
                        <button class="price-button" data-min="25000" data-max="50000">₹25,000 - ₹50,000</button>
                        <button class="price-button" data-min="50000" data-max="100000">₹50,000 - ₹1 Lakh</button>
                        <button class="price-button" data-min="100000" data-max="250000">₹1 Lakh - ₹2.5 Lakhs</button>
                        <button class="price-button" data-min="250000" data-max="500000">₹2.5 Lakhs - ₹5 Lakhs</button>
                        <button class="price-button" data-min="500000" data-max="1000000">₹5 Lakhs - ₹10 Lakhs</button>
                        <button class="price-button" data-min="1000000" data-max="999999999">Above ₹10 Lakhs</button>
                    </div>
                </div>
            </aside>

            <main class="product-grid">
                <% products.forEach(product => { %>
                    <div class="product-card">
                        <span class="wishlist-btn" data-product="<%= product._id %>">❤️</span>
                        <a href="/productDetails?id=<%= product._id %>">
                            <img src="<%= product.image %>" alt="<%= product.name %>" />
                        </a>
                        <h4><%= product.productName %></h4>
                        <p><%= product.description %></p>
                        <p>
                            Price: RS :<%= product.salePrice %>
                            <% if(product.oldPrice) { %>
                                <span class="text-muted"><strike>RS :<%= product.oldPrice %></strike></span>
                            <% } %>
                        </p>
                        <% if (product.quantity <= 0) { %>
                          <p class="text-danger">Out of Stock</p>
                      <% } %>
                  
                        <button class="add-to-cart-btn" data-product="<%= product._id %>">Add to Cart</button>
                    </div>
                <% }); %>
            </main>
        </div>

        <% if (totalPages > 1) { %>
            <div class="pagination">
                <% for(let i=1; i <=totalPages; i++) { %>
                    <a href="/filter?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>">
                        <%= i %>
                    </a>
                <% } %>
            </div>
        <% } %>
    </section>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
      const filterForm = document.getElementById('filterForm');
      const categorySelect = document.querySelector('.category-filter');
      const brandSelect = document.querySelector('.brand-filter');
      const priceButtons = document.querySelectorAll('.price-button');
      const searchInput = document.querySelector('.search-input');
    
      // Helper function to update URL with filter parameters
      function updateURL(params = {}) {
        const url = new URL(window.location.href);
    
        // Clear existing parameters if replacing all filters
        if (params.replaceAll) {
          url.searchParams.forEach((value, key) => {
            if (key !== 'page') {
              url.searchParams.delete(key);
            }
          });
          delete params.replaceAll;
        }
    
        // Update URL with new parameters
        Object.entries(params).forEach(([key, value]) => {
          if (value) {
            url.searchParams.set(key, value);
          } else {
            url.searchParams.delete(key);
          }
        });
    
        // Reset to page 1 when filters change
        url.searchParams.set('page', '1');
    
        return url.toString();
      }
    
      // Initialize filters from URL
      function initializeFilters() {
        const params = new URLSearchParams(window.location.search);
    
        // Set category filter
        if (params.has('category') && categorySelect) {
          categorySelect.value = params.get('category');
        }
    
        // Set brand filter
        if (params.has('brand') && brandSelect) {
          brandSelect.value = params.get('brand');
        }
    
        // Set price range
        const priceMin = params.get('priceMin');
        const priceMax = params.get('priceMax');
        if (priceMin && priceMax) {
          const activeButton = document.querySelector(
            `.price-button[data-min="${priceMin}"][data-max="${priceMax}"]`
          );
          if (activeButton) {
            priceButtons.forEach(btn => btn.classList.remove('active'));
            activeButton.classList.add('active');
          }
        }
    
        // Set search input
        if (params.has('search')) {
          searchInput.value = params.get('search');
        }
      }
    
      // Event Listeners
      if (categorySelect) {
        categorySelect.addEventListener('change', function() {
          window.location.href = updateURL({
            category: this.value,
            replaceAll: false
          });
        });
      }
    
      if (brandSelect) {
        brandSelect.addEventListener('change', function() {
          window.location.href = updateURL({
            brand: this.value,
            replaceAll: false
          });
        });
      }
    
      priceButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          priceButtons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
    
          window.location.href = updateURL({
            priceMin: this.dataset.min,
            priceMax: this.dataset.max,
            replaceAll: false
          });
        });
      });
    
      if (filterForm) {
        filterForm.addEventListener('submit', function(e) {
          e.preventDefault();
          const searchValue = searchInput.value.trim();
          console.log('submitting search:',searchValue)
    
          window.location.href = updateURL({
            search: searchValue,
            replaceAll: true
          });
        });
      }
    
      // Clear individual filters (if any clear buttons are added later)
      document.querySelectorAll('.clear-filter').forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          const filterType = this.dataset.filter;
          const params = {};
          params[filterType] = '';
          window.location.href = updateURL(params);
        });
      });
    
      // Initialize filters on page load
      initializeFilters();
    });
</script>

<%- include("../../views/partials/user/footer") %>